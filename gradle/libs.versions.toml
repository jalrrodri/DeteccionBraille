[versions]
agp = "8.8.1"
cameraCamera2 = "1.1.0-beta03"
cameraCore = "1.1.0-beta03"
cameraLifecycle = "1.1.0-beta03"
cameraView = "1.1.0-beta03"
constraintlayout = "2.0.4"
kotlin = "1.9.0"
coreKtx = "1.12.0"
junit = "4.13.2"
junitVersion = "1.1.5"
espressoCore = "3.5.1"
appcompat = "1.6.1"
kotlinxCoroutinesAndroid = "1.5.0"
kotlinStdlibJdk8 = "1.9.23"
lifecycleRuntimeKtx = "2.8.7"
localbroadcastmanager = "1.0.0"
material = "1.11.0"
core = "1.12.0"
navigationUiKtx = "2.3.5"
navigationFragmentKtx = "2.3.5"
robolectric = "4.4"
rulesVersion = "1.6.1"
runnerVersion = "1.6.2"
tensorflowLite = "2.16.1"
tensorflowLiteGpu = "2.9.0"
tensorflowLiteGpuDelegatePlugin = "0.4.0"
tensorflowLiteSelectTfOps = "2.16.1"
tensorflowLiteTaskVision = "0.4.0"
window = "1.0.0-alpha09"

[libraries]
androidx-camera-view = { module = "androidx.camera:camera-view", version.ref = "cameraView" }
androidx-constraintlayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "constraintlayout" }
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
androidx-lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycleRuntimeKtx" }
androidx-localbroadcastmanager = { module = "androidx.localbroadcastmanager:localbroadcastmanager", version.ref = "localbroadcastmanager" }
androidx-navigation-fragment-ktx = { module = "androidx.navigation:navigation-fragment-ktx", version.ref = "navigationFragmentKtx" }
androidx-navigation-ui-ktx = { module = "androidx.navigation:navigation-ui-ktx", version.ref = "navigationUiKtx" }
androidx-window = { module = "androidx.window:window", version.ref = "window" }
camera-camera2 = { module = "androidx.camera:camera-camera2", version.ref = "cameraCamera2" }
camera-core = { module = "androidx.camera:camera-core", version.ref = "cameraCore" }
camera-lifecycle = { module = "androidx.camera:camera-lifecycle", version.ref = "cameraLifecycle" }
core = { module = "androidx.test:core", version.ref = "rulesVersion" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
kotlin-stdlib-jdk8 = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "kotlinStdlibJdk8" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinxCoroutinesAndroid" }
material = { group = "com.google.android.material", name = "material", version.ref = "material" }
androidx-core = { group = "androidx.core", name = "core", version.ref = "core" }
robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectric" }
rules = { module = "androidx.test:rules", version.ref = "rulesVersion" }
runner = { module = "androidx.test:runner", version.ref = "runnerVersion" }
tensorflow-lite-gpu-delegate-plugin = { module = "org.tensorflow:tensorflow-lite-gpu-delegate-plugin", version.ref = "tensorflowLiteGpuDelegatePlugin" }
tensorflow-lite-gpu = { module = "org.tensorflow:tensorflow-lite-gpu", version.ref = "tensorflowLiteGpu" }
tensorflow-lite-select-tf-ops = { module = "org.tensorflow:tensorflow-lite-select-tf-ops", version.ref = "tensorflowLiteSelectTfOps" }
tensorflow-lite = { module = "org.tensorflow:tensorflow-lite", version.ref = "tensorflowLite" }
tensorflow-tensorflow-lite-task-vision = { module = "org.tensorflow:tensorflow-lite-task-vision", version.ref = "tensorflowLiteTaskVision" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
jetbrainsKotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }

